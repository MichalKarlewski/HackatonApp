// <auto-generated />
using HackatonData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HackatonData.Migrations
{
    [DbContext(typeof(HackatonContext))]
    partial class HackatonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HackatonData.Models.Debitor", b =>
                {
                    b.Property<int>("Debitor_Nr")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Debitor_Adresse1");

                    b.Property<string>("Debitor_Adresse2");

                    b.Property<string>("Debitor_EPost");

                    b.Property<string>("Debitor_Fodselsdato");

                    b.Property<string>("Debitor_Ident");

                    b.Property<string>("Debitor_Kategori");

                    b.Property<string>("Debitor_Kontakt");

                    b.Property<string>("Debitor_KontoNr");

                    b.Property<string>("Debitor_LandKode");

                    b.Property<string>("Debitor_Navn1");

                    b.Property<string>("Debitor_Navn2");

                    b.Property<string>("Debitor_Postnr");

                    b.Property<string>("Debitor_Sprak");

                    b.Property<string>("Debitor_Sted");

                    b.Property<int>("Unik");

                    b.HasKey("Debitor_Nr");

                    b.ToTable("Debitor");
                });

            modelBuilder.Entity("HackatonData.Models.Kreditor", b =>
                {
                    b.Property<int>("Kreditor_Nr")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BaseCurrency");

                    b.Property<int>("DefaultProduct");

                    b.Property<string>("Kreditor_Adress1");

                    b.Property<string>("Kreditor_Adress2");

                    b.Property<int>("Kreditor_AvrIntervall");

                    b.Property<string>("Kreditor_Avsluttet");

                    b.Property<string>("Kreditor_CRMRef1");

                    b.Property<string>("Kreditor_CRMRef2");

                    b.Property<string>("Kreditor_EPost");

                    b.Property<string>("Kreditor_Identitet");

                    b.Property<string>("Kreditor_Kategori");

                    b.Property<string>("Kreditor_Kontakt");

                    b.Property<int>("Kreditor_KundeNr");

                    b.Property<string>("Kreditor_LandKode");

                    b.Property<string>("Kreditor_Mobil");

                    b.Property<string>("Kreditor_Namn1");

                    b.Property<string>("Kreditor_Namn2");

                    b.Property<string>("Kreditor_NesteAvrDato");

                    b.Property<string>("Kreditor_Postnr");

                    b.Property<int>("Kreditor_SisteFakturaNr");

                    b.Property<string>("Kreditor_Sprak");

                    b.Property<string>("Kreditor_Sted");

                    b.Property<int>("Unik");

                    b.HasKey("Kreditor_Nr");

                    b.ToTable("Kreditor");
                });

            modelBuilder.Entity("HackatonData.Models.Sreg", b =>
                {
                    b.Property<int>("Sak_Nr")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Sak_AvsluttDato");

                    b.Property<string>("Sak_BrukerID");

                    b.Property<double>("Sak_BrukesIkke10");

                    b.Property<string>("Sak_Dato");

                    b.Property<int?>("Sak_DebNr");

                    b.Property<int?>("Sak_KredNr");

                    b.Property<string>("Sak_Ref2");

                    b.Property<string>("Sak_Referanse");

                    b.Property<double>("Sak_Rentegrunnlag");

                    b.Property<double>("Sak_SaldoHovedstol");

                    b.Property<string>("Sak_Status");

                    b.Property<string>("Sak_StatusTekst");

                    b.Property<double>("Sak_Sum");

                    b.HasKey("Sak_Nr");

                    b.HasIndex("Sak_DebNr");

                    b.HasIndex("Sak_KredNr");

                    b.ToTable("Sreg");
                });

            modelBuilder.Entity("HackatonData.Models.Status", b =>
                {
                    b.Property<int>("Status_SakNr");

                    b.Property<int>("Status_LinjeNr");

                    b.Property<DateTime>("Changed");

                    b.Property<string>("Status_Dato");

                    b.Property<string>("Status_Kode");

                    b.Property<string>("Status_RegDato");

                    b.Property<double>("Status_Saldo");

                    b.Property<string>("Status_Tekst");

                    b.Property<int>("Unik");

                    b.HasKey("Status_SakNr", "Status_LinjeNr");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("HackatonData.Models.Sreg", b =>
                {
                    b.HasOne("HackatonData.Models.Debitor", "Sak_DebtorNr")
                        .WithMany()
                        .HasForeignKey("Sak_DebNr");

                    b.HasOne("HackatonData.Models.Kreditor", "Sak_KreditorNr")
                        .WithMany()
                        .HasForeignKey("Sak_KredNr");
                });

            modelBuilder.Entity("HackatonData.Models.Status", b =>
                {
                    b.HasOne("HackatonData.Models.Sreg", "Status_SakNumber")
                        .WithMany()
                        .HasForeignKey("Status_SakNr")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
